name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile contracts
        run: npm run compile

      - name: Run Hardhat tests
        run: npm run test:hardhat

      - name: Run Hardhat coverage
        run: npm run test:hardhat:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          flags: hardhat
          name: hardhat-coverage
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-node-${{ matrix.node-version }}
          path: coverage/
          retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for outdated dependencies
        run: npm outdated || true

      - name: Upload security report
        if: always()
        run: npm audit --json > security-report.json || true

      - name: Archive security report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-report
          path: security-report.json
          retention-days: 30

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Run Solhint
        run: npm run lint:sol
        continue-on-error: true

      - name: Check Prettier formatting
        run: npm run format:check
        continue-on-error: true

      - name: Type check
        run: npm run type-check
        continue-on-error: true

  gas-report:
    name: Gas Usage Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate gas report
        run: REPORT_GAS=true npm run test:hardhat

      - name: Upload gas report
        uses: actions/upload-artifact@v4
        with:
          name: gas-report
          path: gas-report.txt
          retention-days: 30

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [test, security, lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check build size
        run: du -sh dist/ || true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-dist
          path: dist/
          retention-days: 30
