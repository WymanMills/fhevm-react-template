export { DecryptionError, EncryptionError, FhevmError, FhevmNotReadyError, INPUT_TO_ENCRYPTED_TYPE, NETWORK_CONFIGS, NetworkError, PermissionError, ValidationError, areEncryptedValuesEqual, checkPermission, createFhevmInstance, encryptBatch, encryptValue, generatePermission, getChainId, getEncryptedSize, getEncryptedType, getGatewayUrl, getNetworkConfig, getPermittedAddresses, getPublicKey, getSigner, grantPermission, isDecryptionReady, isInstanceReady, isSupportedNetwork, isValidAddress, isValidHex, mergeNetworkConfig, normalizeValue, reinitializeInstance, requestBatchDecryption, requestDecryption, requestDecryptionWithSignature, requestPermission, revokePermission, toBigInt, toContractInput, toHex, validateContractAddress, validateEncryptionInput, validateHandle, validateNetworkConfig, waitForDecryption } from '../vue/index.mjs';
export { D as DecryptionRequest, e as DecryptionResult, E as EncryptedType, d as EncryptedValue, b as FhevmConfig, c as FhevmInstance, h as FhevmProviderProps, F as FhevmjsInstance, I as InputType, a as NetworkConfig, N as NetworkName, P as PermissionConfig, g as UseDecryptResult, f as UseEncryptResult, U as UseFhevmState } from '../index-DgoIT4PI.mjs';
import 'ethers';
